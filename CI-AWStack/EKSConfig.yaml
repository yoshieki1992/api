AWSTemplateFormatVersion: 2010-09-09
Description: Despliegue de API Kluster y Nodos Workers
Metadata:
  Authors:
    Description: Yoshieki Tanamachi yoshieki1992@gmail.com
  License: gg
  
Parameters:

  NombreKluster:
    Type: String
    Default: APIkluster

  NombreRepositorio:
    Description: "Definir el nombre en minusculas"
    Type: String
    Default: apiecr

  VPcId:
    Description: "Selecionar una Vpc ID"
    Type: AWS::EC2::VPC::Id

  TipodeInstancia:
    Description: "Selecionar un tipo de Instancia"
    Type: String
    Default: t3.small
    AllowedValues: 
        - t3.micro
        - t3.small
        - t3.medium

  NodosDeseados:
    Description: "Numero de nodos deseados"
    Type: String
    MinLength: '1'
    MaxLength: '1'
    Default: 2
  
  MinNodos:
    Description: "Minimo numero de nodos"
    Type: String
    MinLength: '1'
    MaxLength: '1'
    Default: 2
  
  MaxNodos:
    Description: "Maximo numero de nodos"
    Type: String
    MinLength: '1'
    MaxLength: '1'
    Default: 2
      
  KeyPair:
    Description: "Selecionar KeyPair para los Workers Nodes"
    Type: AWS::EC2::KeyPair::KeyName
  
  SubnetCIDRAZ0:
    Description: "Ingresa un CIDR disponible de la VPC seleccionada"
    Type: String  
    MinLength: '9'
    MaxLength: '18'
    Default: 172.31.200.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
  
  SubnetCIDRAZ1:
    Description: "Ingresa un CIDR disponible de la VPC seleccionada"
    Type: String  
    MinLength: '9'
    MaxLength: '18'
    Default: 172.31.201.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'

Resources:

  ApiEKSMaster:
    Type: AWS::EKS::Cluster
    Properties: 
      Name: !Sub '${NombreKluster}'
      RoleArn: !ImportValue EKSAPIRoleArn
      ResourcesVpcConfig: 
        SecurityGroupIds:
          - !GetAtt SecurityGroupEKS.GroupId
        SubnetIds: 
          - !Ref SubnetA
          - !Ref SubnetB
      
  ApiEKSWorkNodes:
    Type: AWS::EKS::Nodegroup
    Properties: 
      AmiType: AL2_x86_64
      ClusterName: !Ref ApiEKSMaster
      ForceUpdateEnabled: True
      InstanceTypes: 
        - !Sub '${TipodeInstancia}' 
      NodegroupName: !Ref ApiEKSMaster
      NodeRole: !ImportValue WorkersEKSAPIRolArn
      RemoteAccess: 
        Ec2SshKey: !Sub '${KeyPair}'
        SourceSecurityGroups: 
          - !GetAtt SecurityGroupEKS.GroupId
      ScalingConfig: 
          DesiredSize: !Sub '${NodosDeseados}'
          MaxSize: !Sub '${MaxNodos}'
          MinSize: !Sub '${MinNodos}'
      Subnets: 
        - !Ref SubnetA
        - !Ref SubnetB

  ApiECR:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: !Sub '${NombreRepositorio}'
      RepositoryPolicyText: 
        Version: "2012-10-17"
        Statement: 
          - Effect: Allow
            Principal: 
              AWS: "*"
            Action: 
              - "ecr:*"

  SecurityGroupEKS:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      VpcId: !Sub '${VPcId}'
      GroupDescription: !Sub '${NombreKluster}'
      GroupName: !Sub '${NombreKluster}'
      SecurityGroupEgress: 
          IpProtocol: tcp
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 0.0.0.0/0
          IpProtocol: -1
      SecurityGroupIngress: 
          IpProtocol: tcp
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 0.0.0.0/0
          IpProtocol: -1

  SubnetB: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: !Sub '${VPcId}'
      CidrBlock: !Sub '${SubnetCIDRAZ0}'
      MapPublicIpOnLaunch: true
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""

  SubnetA: 
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: !Sub '${VPcId}'
      CidrBlock: !Sub '${SubnetCIDRAZ1}'
      MapPublicIpOnLaunch: true
      AvailabilityZone: 
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
